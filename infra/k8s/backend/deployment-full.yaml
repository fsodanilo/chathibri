apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: chathib
  labels:
    app: backend
    component: api-server
data:
  PYTHONPATH: "/app"
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  LOG_LEVEL: "INFO"
  BACKEND_PORT: "8000"
  BACKEND_HOST: "0.0.0.0"
  
  # URLs dos serviços internos
  CHROMADB_SERVICE_URL: "http://chromadb-service:8001"
  
  # Configurações AWS DynamoDB
  AWS_REGION: ""
  DYNAMODB_TABLE_CHAT_HISTORY: "chathib-chat-history-stage"
  DYNAMODB_TABLE_PDFS: "chathib-pdfs-stage"
  DYNAMODB_TABLE_USERS: "chathib-users-stage"
  DYNAMODB_TABLE_COLLECTIONS: "chathib-collections-stage"
  
  # Configurações da aplicação
  MAX_UPLOAD_SIZE: "50MB"
  UPLOAD_DIR: "/app/uploads"
  TEMP_DIR: "/app/temp"
  DELTA_DATASETS_DIR: "/app/delta_datasets"
  
  # Configurações de processamento
  MAX_WORKERS: "4"
  SENTENCE_TRANSFORMERS_CACHE: "/app/cache/sentence_transformers"
  HUGGINGFACE_CACHE: "/app/cache/huggingface"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: chathib
  labels:
    app: backend
    component: api-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2-default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-cache-pvc
  namespace: chathib
  labels:
    app: backend
    component: api-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2-default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-delta-datasets-pvc
  namespace: chathib
  labels:
    app: backend
    component: api-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: gp2-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: chathib
  labels:
    app: backend
    component: api-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        component: api-server
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: backend
          image: chathib-backend:stage
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            # ConfigMap values
            - name: PYTHONPATH
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PYTHONPATH
            - name: PYTHONUNBUFFERED
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PYTHONUNBUFFERED
            - name: PYTHONDONTWRITEBYTECODE
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PYTHONDONTWRITEBYTECODE
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: LOG_LEVEL
            - name: CHROMADB_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: CHROMADB_SERVICE_URL
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: AWS_REGION
            - name: DYNAMODB_TABLE_CHAT_HISTORY
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DYNAMODB_TABLE_CHAT_HISTORY
            - name: DYNAMODB_TABLE_PDFS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DYNAMODB_TABLE_PDFS
            - name: DYNAMODB_TABLE_USERS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DYNAMODB_TABLE_USERS
            - name: DYNAMODB_TABLE_COLLECTIONS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DYNAMODB_TABLE_COLLECTIONS
            - name: MAX_UPLOAD_SIZE
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: MAX_UPLOAD_SIZE
            - name: UPLOAD_DIR
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: UPLOAD_DIR
            - name: TEMP_DIR
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: TEMP_DIR
            - name: DELTA_DATASETS_DIR
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: DELTA_DATASETS_DIR
            - name: SENTENCE_TRANSFORMERS_CACHE
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: SENTENCE_TRANSFORMERS_CACHE
            - name: HUGGINGFACE_CACHE
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: HUGGINGFACE_CACHE
            # Secret values
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: GOOGLE_API_KEY
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AWS_SECRET_ACCESS_KEY
          resources:
            requests:
              memory: "5Gi"
              cpu: "1000m"
            limits:
              memory: "6Gi"
              cpu: "3000m"
          volumeMounts:
            - name: uploads-volume
              mountPath: /app/uploads
            - name: cache-volume
              mountPath: /app/cache
            - name: delta-datasets-volume
              mountPath: /app/delta_datasets
            - name: temp-volume
              mountPath: /app/temp
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 180
            periodSeconds: 120
            timeoutSeconds: 60
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 10
          startupProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 20
            failureThreshold: 180
      volumes:
        - name: uploads-volume
          persistentVolumeClaim:
            claimName: backend-uploads-pvc
        - name: cache-volume
          persistentVolumeClaim:
            claimName: backend-cache-pvc
        - name: delta-datasets-volume
          persistentVolumeClaim:
            claimName: backend-delta-datasets-pvc
        - name: temp-volume
          emptyDir:
            sizeLimit: 2Gi
      # restartPolicy: Always
      # terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: chathib
  labels:
    app: backend
    component: api-server
spec:
  selector:
    app: backend
  ports:
    - name: http
      protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
  sessionAffinity: ClientIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: chathib
  labels:
    app: backend
    component: api-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
---
