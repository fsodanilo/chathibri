apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: chathib
  labels:
    app: frontend
    component: web-server
data:
  # Python Configuration
  PYTHONPATH: "/app"
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"
  
  # Application Configuration
  LOG_LEVEL: "INFO"
  FRONTEND_PORT: "8080"
  
  # Backend Service URL (internal cluster communication)
  BACKEND_SERVICE_URL: "http://backend-service:8000"
  
  # File Upload Configuration
  MAX_UPLOAD_SIZE: "104857600"  # 100MB
  UPLOAD_DIR: "/app/uploads"
  
  # Static Files
  STATIC_DIR: "/app/static"
  TEMPLATES_DIR: "/app/templates"
  
  # Session Configuration
  SESSION_TIMEOUT: "3600"  # 1 hour
  
  # Environment
  ENVIRONMENT: "production"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-uploads-pvc
  namespace: chathib
  labels:
    app: frontend
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-static-pvc
  namespace: chathib
  labels:
    app: frontend
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frontend-templates-pvc
  namespace: chathib
  labels:
    app: frontend
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: chathib
  labels:
    app: frontend
    component: web-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: web-server
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: frontend
          image: chathib-frontend:stage
          imagePullPolicy: Always
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            # ConfigMap values
            - name: PYTHONPATH
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: PYTHONPATH
            - name: PYTHONUNBUFFERED
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: PYTHONUNBUFFERED
            - name: PYTHONDONTWRITEBYTECODE
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: PYTHONDONTWRITEBYTECODE
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: LOG_LEVEL
            - name: FRONTEND_PORT
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: FRONTEND_PORT
            - name: BACKEND_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: BACKEND_SERVICE_URL
            - name: MAX_UPLOAD_SIZE
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: MAX_UPLOAD_SIZE
            - name: UPLOAD_DIR
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: UPLOAD_DIR
            - name: STATIC_DIR
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: STATIC_DIR
            - name: TEMPLATES_DIR
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: TEMPLATES_DIR
            - name: SESSION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: SESSION_TIMEOUT
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: frontend-config
                  key: ENVIRONMENT
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_CLIENT_ID
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_CLIENT_SECRET
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_TENANT_ID
            - name: AZURE_REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  name: backend-secrets
                  key: AZURE_REDIRECT_URI                  
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: uploads-volume
              mountPath: /app/uploads
            - name: static-volume
              mountPath: /app/static
            - name: templates-volume
              mountPath: /app/templates
            - name: temp-volume
              mountPath: /app/temp
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
      volumes:
        - name: uploads-volume
          persistentVolumeClaim:
            claimName: frontend-uploads-pvc
        - name: static-volume
          persistentVolumeClaim:
            claimName: frontend-static-pvc
        - name: templates-volume
          persistentVolumeClaim:
            claimName: frontend-templates-pvc
        - name: temp-volume
          emptyDir:
            sizeLimit: 1Gi
      # restartPolicy: Always
      # terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: chathib
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb" 
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "xxxx" 
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443" 
  labels:
    app: frontend
    component: web-server
spec:
  selector:
    app: frontend
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8080      
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: chathib
  labels:
    app: frontend
    component: web-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
---

