apiVersion: v1
kind: ConfigMap
metadata:
  name: chromadb-config
  namespace: chathib
  labels:
    app: chromadb
    component: vector-database
data:
  CHROMA_DATA_PATH: "/app/chroma_data"
  PYTHONPATH: "/app"
  PYTHONUNBUFFERED: "1"
  LOG_LEVEL: "INFO"
  CHROMA_SERVER_HTTP_PORT: "8001"
  CHROMA_SERVER_HOST: "0.0.0.0"
  ANONYMIZED_TELEMETRY: "false"
  ALLOW_RESET: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chromadb-pvc
  namespace: chathib
  labels:
    app: chromadb
    component: vector-database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi  # MUDANÇA: Aumentar storage para 20GB
  storageClassName: gp2-default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chromadb-deployment
  namespace: chathib
  labels:
    app: chromadb
    component: vector-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chromadb
  template:
    metadata:
      labels:
        app: chromadb
        component: vector-database
    spec:
      containers:
        - name: chromadb
          image: chathib-chromadb:stage
          imagePullPolicy: Always
          ports:
            - containerPort: 8001
              name: http
              protocol: TCP
          env:
            - name: CHROMA_DATA_PATH
              value: "/app/chroma_data"
            - name: PYTHONPATH
              value: "/app"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: PYTHONDONTWRITEBYTECODE
              value: "1"
            - name: LOG_LEVEL
              value: "INFO"
            - name: TRANSFORMERS_CACHE
              value: "/home/appuser/.cache/huggingface"
            - name: HF_HOME
              value: "/home/appuser/.cache/huggingface"
            - name: TORCH_HOME
              value: "/home/appuser/.cache/torch"
            - name: SENTENCE_TRANSFORMERS_HOME
              value: "/home/appuser/.cache/sentence_transformers"
          resources:
            requests:
              memory: "1Gi"    # MUDANÇA: Aumentar memória mínima
              cpu: "500m"      # MUDANÇA: Aumentar CPU mínima
            limits:
              memory: "4Gi"    # MUDANÇA: Aumentar limite de memória
              cpu: "2000m"     # MUDANÇA: Aumentar limite de CPU
          volumeMounts:
            - name: chroma-data
              mountPath: /app/chroma_data
            - name: cache-volume
              mountPath: /home/appuser/.cache
            - name: aws-config
              mountPath: /root/.aws
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 60
      volumes:
        - name: chroma-data
          persistentVolumeClaim:
            claimName: chromadb-pvc
        - name: cache-volume
          emptyDir:
            sizeLimit: 4Gi
        - name: aws-config
          hostPath:
            path: /home/username/.aws
      # restartPolicy: Always
      # terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: chromadb-service
  namespace: chathib
  labels:
    app: chromadb
    component: vector-database
spec:
  selector:
    app: chromadb
  ports:
    - name: http
      protocol: TCP
      port: 8001
      targetPort: 8001
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chromadb-hpa
  namespace: chathib
  labels:
    app: chromadb
    component: vector-database
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chromadb-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
---
